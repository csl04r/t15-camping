/*
 * API title
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PutV1EventsIdRsvpRequest {
    /// ID of the user for whom you are RSVP'ing. Must be within your scope as a user AND must be invited to the event.
    #[serde(rename = "user_id")]
    pub user_id: i32,
    /// yes: Coming. no: Not coming. tbd: No clue.
    #[serde(rename = "status_cd")]
    pub status_cd: String,
    #[serde(rename = "number_of_youth_guests", skip_serializing_if = "Option::is_none")]
    pub number_of_youth_guests: Option<i32>,
    #[serde(rename = "number_of_adult_guests", skip_serializing_if = "Option::is_none")]
    pub number_of_adult_guests: Option<i32>,
}

impl PutV1EventsIdRsvpRequest {
    pub fn new(user_id: i32, status_cd: String) -> PutV1EventsIdRsvpRequest {
        PutV1EventsIdRsvpRequest {
            user_id,
            status_cd,
            number_of_youth_guests: None,
            number_of_adult_guests: None,
        }
    }
}

