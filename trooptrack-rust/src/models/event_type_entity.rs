/*
 * API title
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// EventTypeEntity : EventTypeEntity model
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EventTypeEntity {
    /// ID of the event type record
    #[serde(rename = "event_type_id", skip_serializing_if = "Option::is_none")]
    pub event_type_id: Option<i32>,
    /// Name of the event type (Campout, Meeting, etc)
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Color used to display events of this type on the TroopTrack calendar
    #[serde(rename = "color", skip_serializing_if = "Option::is_none")]
    pub color: Option<String>,
}

impl EventTypeEntity {
    /// EventTypeEntity model
    pub fn new() -> EventTypeEntity {
        EventTypeEntity {
            event_type_id: None,
            name: None,
            color: None,
        }
    }
}

