/*
 * API title
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.TroopPhotoEntity;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * PhotoAlbumEntity model
 */
@Schema(description = "PhotoAlbumEntity model")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-12-12T23:02:08.677823-05:00[America/New_York]")
public class PhotoAlbumEntity {
  @SerializedName("name")
  private String name = null;

  @SerializedName("photo_album_id")
  private Integer photoAlbumId = null;

  @SerializedName("photo_count")
  private Integer photoCount = null;

  @SerializedName("taken_on")
  private String takenOn = null;

  @SerializedName("troop_photos")
  private List<TroopPhotoEntity> troopPhotos = null;

  public PhotoAlbumEntity name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name used to identify the photo album
   * @return name
  **/
  @Schema(description = "Name used to identify the photo album")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PhotoAlbumEntity photoAlbumId(Integer photoAlbumId) {
    this.photoAlbumId = photoAlbumId;
    return this;
  }

   /**
   * ID of the photo album record
   * @return photoAlbumId
  **/
  @Schema(description = "ID of the photo album record")
  public Integer getPhotoAlbumId() {
    return photoAlbumId;
  }

  public void setPhotoAlbumId(Integer photoAlbumId) {
    this.photoAlbumId = photoAlbumId;
  }

  public PhotoAlbumEntity photoCount(Integer photoCount) {
    this.photoCount = photoCount;
    return this;
  }

   /**
   * Number of photos in this album
   * @return photoCount
  **/
  @Schema(description = "Number of photos in this album")
  public Integer getPhotoCount() {
    return photoCount;
  }

  public void setPhotoCount(Integer photoCount) {
    this.photoCount = photoCount;
  }

  public PhotoAlbumEntity takenOn(String takenOn) {
    this.takenOn = takenOn;
    return this;
  }

   /**
   * Date the album was taken on as specified by the user
   * @return takenOn
  **/
  @Schema(description = "Date the album was taken on as specified by the user")
  public String getTakenOn() {
    return takenOn;
  }

  public void setTakenOn(String takenOn) {
    this.takenOn = takenOn;
  }

  public PhotoAlbumEntity troopPhotos(List<TroopPhotoEntity> troopPhotos) {
    this.troopPhotos = troopPhotos;
    return this;
  }

  public PhotoAlbumEntity addTroopPhotosItem(TroopPhotoEntity troopPhotosItem) {
    if (this.troopPhotos == null) {
      this.troopPhotos = new ArrayList<TroopPhotoEntity>();
    }
    this.troopPhotos.add(troopPhotosItem);
    return this;
  }

   /**
   * An array of troop photos
   * @return troopPhotos
  **/
  @Schema(description = "An array of troop photos")
  public List<TroopPhotoEntity> getTroopPhotos() {
    return troopPhotos;
  }

  public void setTroopPhotos(List<TroopPhotoEntity> troopPhotos) {
    this.troopPhotos = troopPhotos;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PhotoAlbumEntity photoAlbumEntity = (PhotoAlbumEntity) o;
    return Objects.equals(this.name, photoAlbumEntity.name) &&
        Objects.equals(this.photoAlbumId, photoAlbumEntity.photoAlbumId) &&
        Objects.equals(this.photoCount, photoAlbumEntity.photoCount) &&
        Objects.equals(this.takenOn, photoAlbumEntity.takenOn) &&
        Objects.equals(this.troopPhotos, photoAlbumEntity.troopPhotos);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, photoAlbumId, photoCount, takenOn, troopPhotos);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PhotoAlbumEntity {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    photoAlbumId: ").append(toIndentedString(photoAlbumId)).append("\n");
    sb.append("    photoCount: ").append(toIndentedString(photoCount)).append("\n");
    sb.append("    takenOn: ").append(toIndentedString(takenOn)).append("\n");
    sb.append("    troopPhotos: ").append(toIndentedString(troopPhotos)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
