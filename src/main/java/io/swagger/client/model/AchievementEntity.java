/*
 * API title
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AchievementEntity;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * AchievementEntity model
 */
@Schema(description = "AchievementEntity model")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-12-12T23:02:08.677823-05:00[America/New_York]")
public class AchievementEntity {
  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("children")
  private List<AchievementEntity> children = null;

  public AchievementEntity name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the achievement
   * @return name
  **/
  @Schema(description = "Name of the achievement")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AchievementEntity description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Detailed description of the achievement
   * @return description
  **/
  @Schema(description = "Detailed description of the achievement")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public AchievementEntity children(List<AchievementEntity> children) {
    this.children = children;
    return this;
  }

  public AchievementEntity addChildrenItem(AchievementEntity childrenItem) {
    if (this.children == null) {
      this.children = new ArrayList<AchievementEntity>();
    }
    this.children.add(childrenItem);
    return this;
  }

   /**
   * Array of requirements
   * @return children
  **/
  @Schema(description = "Array of requirements")
  public List<AchievementEntity> getChildren() {
    return children;
  }

  public void setChildren(List<AchievementEntity> children) {
    this.children = children;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AchievementEntity achievementEntity = (AchievementEntity) o;
    return Objects.equals(this.name, achievementEntity.name) &&
        Objects.equals(this.description, achievementEntity.description) &&
        Objects.equals(this.children, achievementEntity.children);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, children);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AchievementEntity {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
