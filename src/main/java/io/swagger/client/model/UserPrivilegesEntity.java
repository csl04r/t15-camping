/*
 * API title
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * UserPrivilegesEntity model
 */
@Schema(description = "UserPrivilegesEntity model")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-12-12T23:02:08.677823-05:00[America/New_York]")
public class UserPrivilegesEntity {
  @SerializedName("token")
  private String token = null;

  @SerializedName("user_id")
  private Integer userId = null;

  @SerializedName("troop")
  private String troop = null;

  @SerializedName("troop_id")
  private Integer troopId = null;

  @SerializedName("cache_scope")
  private String cacheScope = null;

  @SerializedName("troop_number")
  private String troopNumber = null;

  @SerializedName("troop_type")
  private String troopType = null;

  @SerializedName("troop_type_id")
  private Integer troopTypeId = null;

  @SerializedName("privileges")
  private List<String> privileges = null;

  public UserPrivilegesEntity token(String token) {
    this.token = token;
    return this;
  }

   /**
   * API authentication token for this user
   * @return token
  **/
  @Schema(description = "API authentication token for this user")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public UserPrivilegesEntity userId(Integer userId) {
    this.userId = userId;
    return this;
  }

   /**
   * ID of the user record
   * @return userId
  **/
  @Schema(description = "ID of the user record")
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }

  public UserPrivilegesEntity troop(String troop) {
    this.troop = troop;
    return this;
  }

   /**
   * Full number or name identifying the unit this user belongs to.
   * @return troop
  **/
  @Schema(description = "Full number or name identifying the unit this user belongs to.")
  public String getTroop() {
    return troop;
  }

  public void setTroop(String troop) {
    this.troop = troop;
  }

  public UserPrivilegesEntity troopId(Integer troopId) {
    this.troopId = troopId;
    return this;
  }

   /**
   * ID of the unit this user belongs to
   * @return troopId
  **/
  @Schema(description = "ID of the unit this user belongs to")
  public Integer getTroopId() {
    return troopId;
  }

  public void setTroopId(Integer troopId) {
    this.troopId = troopId;
  }

  public UserPrivilegesEntity cacheScope(String cacheScope) {
    this.cacheScope = cacheScope;
    return this;
  }

   /**
   * This value is used to identify the contents of the offline cache that apply to this user.
   * @return cacheScope
  **/
  @Schema(description = "This value is used to identify the contents of the offline cache that apply to this user.")
  public String getCacheScope() {
    return cacheScope;
  }

  public void setCacheScope(String cacheScope) {
    this.cacheScope = cacheScope;
  }

  public UserPrivilegesEntity troopNumber(String troopNumber) {
    this.troopNumber = troopNumber;
    return this;
  }

   /**
   * Number of the unit this user belongs to.
   * @return troopNumber
  **/
  @Schema(description = "Number of the unit this user belongs to.")
  public String getTroopNumber() {
    return troopNumber;
  }

  public void setTroopNumber(String troopNumber) {
    this.troopNumber = troopNumber;
  }

  public UserPrivilegesEntity troopType(String troopType) {
    this.troopType = troopType;
    return this;
  }

   /**
   * Description of the type of unit this user belongs to.
   * @return troopType
  **/
  @Schema(description = "Description of the type of unit this user belongs to.")
  public String getTroopType() {
    return troopType;
  }

  public void setTroopType(String troopType) {
    this.troopType = troopType;
  }

  public UserPrivilegesEntity troopTypeId(Integer troopTypeId) {
    this.troopTypeId = troopTypeId;
    return this;
  }

   /**
   * ID of the unit type record
   * @return troopTypeId
  **/
  @Schema(description = "ID of the unit type record")
  public Integer getTroopTypeId() {
    return troopTypeId;
  }

  public void setTroopTypeId(Integer troopTypeId) {
    this.troopTypeId = troopTypeId;
  }

  public UserPrivilegesEntity privileges(List<String> privileges) {
    this.privileges = privileges;
    return this;
  }

  public UserPrivilegesEntity addPrivilegesItem(String privilegesItem) {
    if (this.privileges == null) {
      this.privileges = new ArrayList<String>();
    }
    this.privileges.add(privilegesItem);
    return this;
  }

   /**
   * Names of privileges this user has.
   * @return privileges
  **/
  @Schema(description = "Names of privileges this user has.")
  public List<String> getPrivileges() {
    return privileges;
  }

  public void setPrivileges(List<String> privileges) {
    this.privileges = privileges;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserPrivilegesEntity userPrivilegesEntity = (UserPrivilegesEntity) o;
    return Objects.equals(this.token, userPrivilegesEntity.token) &&
        Objects.equals(this.userId, userPrivilegesEntity.userId) &&
        Objects.equals(this.troop, userPrivilegesEntity.troop) &&
        Objects.equals(this.troopId, userPrivilegesEntity.troopId) &&
        Objects.equals(this.cacheScope, userPrivilegesEntity.cacheScope) &&
        Objects.equals(this.troopNumber, userPrivilegesEntity.troopNumber) &&
        Objects.equals(this.troopType, userPrivilegesEntity.troopType) &&
        Objects.equals(this.troopTypeId, userPrivilegesEntity.troopTypeId) &&
        Objects.equals(this.privileges, userPrivilegesEntity.privileges);
  }

  @Override
  public int hashCode() {
    return Objects.hash(token, userId, troop, troopId, cacheScope, troopNumber, troopType, troopTypeId, privileges);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserPrivilegesEntity {\n");
    
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    troop: ").append(toIndentedString(troop)).append("\n");
    sb.append("    troopId: ").append(toIndentedString(troopId)).append("\n");
    sb.append("    cacheScope: ").append(toIndentedString(cacheScope)).append("\n");
    sb.append("    troopNumber: ").append(toIndentedString(troopNumber)).append("\n");
    sb.append("    troopType: ").append(toIndentedString(troopType)).append("\n");
    sb.append("    troopTypeId: ").append(toIndentedString(troopTypeId)).append("\n");
    sb.append("    privileges: ").append(toIndentedString(privileges)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
