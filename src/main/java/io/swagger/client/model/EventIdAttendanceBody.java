/*
 * API title
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * EventIdAttendanceBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-12-12T23:02:08.677823-05:00[America/New_York]")
public class EventIdAttendanceBody {
  @SerializedName("event_trackers[user_id]")
  private List<Integer> eventTrackersUserId = new ArrayList<Integer>();

  @SerializedName("event_trackers[attendance_status_cd]")
  private List<String> eventTrackersAttendanceStatusCd = new ArrayList<String>();

  @SerializedName("event_trackers[number_of_adult_guests]")
  private List<Integer> eventTrackersNumberOfAdultGuests = null;

  @SerializedName("event_trackers[number_of_youth_guests]")
  private List<Integer> eventTrackersNumberOfYouthGuests = null;

  public EventIdAttendanceBody eventTrackersUserId(List<Integer> eventTrackersUserId) {
    this.eventTrackersUserId = eventTrackersUserId;
    return this;
  }

  public EventIdAttendanceBody addEventTrackersUserIdItem(Integer eventTrackersUserIdItem) {
    this.eventTrackersUserId.add(eventTrackersUserIdItem);
    return this;
  }

   /**
   * ID of the user for whom you are RSVP&#x27;ing. Must be within your scope as a user AND must be invited to the event.
   * @return eventTrackersUserId
  **/
  @Schema(required = true, description = "ID of the user for whom you are RSVP'ing. Must be within your scope as a user AND must be invited to the event.")
  public List<Integer> getEventTrackersUserId() {
    return eventTrackersUserId;
  }

  public void setEventTrackersUserId(List<Integer> eventTrackersUserId) {
    this.eventTrackersUserId = eventTrackersUserId;
  }

  public EventIdAttendanceBody eventTrackersAttendanceStatusCd(List<String> eventTrackersAttendanceStatusCd) {
    this.eventTrackersAttendanceStatusCd = eventTrackersAttendanceStatusCd;
    return this;
  }

  public EventIdAttendanceBody addEventTrackersAttendanceStatusCdItem(String eventTrackersAttendanceStatusCdItem) {
    this.eventTrackersAttendanceStatusCd.add(eventTrackersAttendanceStatusCdItem);
    return this;
  }

   /**
   * 0: Did not attend. 1: Attended. 2: No clue.
   * @return eventTrackersAttendanceStatusCd
  **/
  @Schema(required = true, description = "0: Did not attend. 1: Attended. 2: No clue.")
  public List<String> getEventTrackersAttendanceStatusCd() {
    return eventTrackersAttendanceStatusCd;
  }

  public void setEventTrackersAttendanceStatusCd(List<String> eventTrackersAttendanceStatusCd) {
    this.eventTrackersAttendanceStatusCd = eventTrackersAttendanceStatusCd;
  }

  public EventIdAttendanceBody eventTrackersNumberOfAdultGuests(List<Integer> eventTrackersNumberOfAdultGuests) {
    this.eventTrackersNumberOfAdultGuests = eventTrackersNumberOfAdultGuests;
    return this;
  }

  public EventIdAttendanceBody addEventTrackersNumberOfAdultGuestsItem(Integer eventTrackersNumberOfAdultGuestsItem) {
    if (this.eventTrackersNumberOfAdultGuests == null) {
      this.eventTrackersNumberOfAdultGuests = new ArrayList<Integer>();
    }
    this.eventTrackersNumberOfAdultGuests.add(eventTrackersNumberOfAdultGuestsItem);
    return this;
  }

   /**
   * How many adult guests will this person bring?
   * @return eventTrackersNumberOfAdultGuests
  **/
  @Schema(description = "How many adult guests will this person bring?")
  public List<Integer> getEventTrackersNumberOfAdultGuests() {
    return eventTrackersNumberOfAdultGuests;
  }

  public void setEventTrackersNumberOfAdultGuests(List<Integer> eventTrackersNumberOfAdultGuests) {
    this.eventTrackersNumberOfAdultGuests = eventTrackersNumberOfAdultGuests;
  }

  public EventIdAttendanceBody eventTrackersNumberOfYouthGuests(List<Integer> eventTrackersNumberOfYouthGuests) {
    this.eventTrackersNumberOfYouthGuests = eventTrackersNumberOfYouthGuests;
    return this;
  }

  public EventIdAttendanceBody addEventTrackersNumberOfYouthGuestsItem(Integer eventTrackersNumberOfYouthGuestsItem) {
    if (this.eventTrackersNumberOfYouthGuests == null) {
      this.eventTrackersNumberOfYouthGuests = new ArrayList<Integer>();
    }
    this.eventTrackersNumberOfYouthGuests.add(eventTrackersNumberOfYouthGuestsItem);
    return this;
  }

   /**
   * How many youth guests will this person bring?
   * @return eventTrackersNumberOfYouthGuests
  **/
  @Schema(description = "How many youth guests will this person bring?")
  public List<Integer> getEventTrackersNumberOfYouthGuests() {
    return eventTrackersNumberOfYouthGuests;
  }

  public void setEventTrackersNumberOfYouthGuests(List<Integer> eventTrackersNumberOfYouthGuests) {
    this.eventTrackersNumberOfYouthGuests = eventTrackersNumberOfYouthGuests;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventIdAttendanceBody eventIdAttendanceBody = (EventIdAttendanceBody) o;
    return Objects.equals(this.eventTrackersUserId, eventIdAttendanceBody.eventTrackersUserId) &&
        Objects.equals(this.eventTrackersAttendanceStatusCd, eventIdAttendanceBody.eventTrackersAttendanceStatusCd) &&
        Objects.equals(this.eventTrackersNumberOfAdultGuests, eventIdAttendanceBody.eventTrackersNumberOfAdultGuests) &&
        Objects.equals(this.eventTrackersNumberOfYouthGuests, eventIdAttendanceBody.eventTrackersNumberOfYouthGuests);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventTrackersUserId, eventTrackersAttendanceStatusCd, eventTrackersNumberOfAdultGuests, eventTrackersNumberOfYouthGuests);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventIdAttendanceBody {\n");
    
    sb.append("    eventTrackersUserId: ").append(toIndentedString(eventTrackersUserId)).append("\n");
    sb.append("    eventTrackersAttendanceStatusCd: ").append(toIndentedString(eventTrackersAttendanceStatusCd)).append("\n");
    sb.append("    eventTrackersNumberOfAdultGuests: ").append(toIndentedString(eventTrackersNumberOfAdultGuests)).append("\n");
    sb.append("    eventTrackersNumberOfYouthGuests: ").append(toIndentedString(eventTrackersNumberOfYouthGuests)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
